// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var Schema              = require("./Schema.js");
var HttpUtils           = require("./utils/HttpUtils.js");
var GraphqlTools        = require("graphql-tools");
var PaperClipHandler    = require("./paperclips/PaperClipHandler.js");
var ApolloServerExpress = require("bs-apollo-server-express/lib/js/src/ApolloServerExpress.js");
var Make                = require("express-promise-router");

function make() {
  var router = Make(/* () */0);
  router.get("/", HttpUtils.heartbeat);
  return router;
}

var Web = /* module */[/* make */make];

function makeSchema(dataProvider) {
  var paperClip = PaperClipHandler.make(dataProvider);
  var resolvers = Object.assign({
        Mutation: Object.assign(paperClip[/* mutations */2], { })
      }, Object.assign({
            Query: Object.assign(paperClip[/* queries */1], { })
          }, Object.assign(paperClip[/* resolvers */0], Object.assign(Schema.coreResolvers, { }))));
  return GraphqlTools.makeExecutableSchema({
              typeDefs: Schema.schema + Schema.queries,
              resolvers: resolvers
            });
}

function make$1(dataProvider) {
  var eta = makeSchema(dataProvider);
  return ApolloServerExpress.createGraphQLExpressMiddleware(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, eta);
}

var GraphQL = /* module */[
  /* makeSchema */makeSchema,
  /* make */make$1
];

exports.Web     = Web;
exports.GraphQL = GraphQL;
/* Schema Not a pure module */
