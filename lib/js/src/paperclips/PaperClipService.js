// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict'

var Knex = require('bs-knex/lib/js/src/Knex.js')
var Curry = require('bs-platform/lib/js/curry.js')
var KnexUtils = require('bs-knex/lib/js/src/KnexUtils.js')
var PaperClip = require('./PaperClip.js')

function handleResponse (param, param$1) {
  return KnexUtils.rejectIfEmpty(PaperClip.decode, param, param$1)
}

function handleGetAll (paperClips, size) {
  var query = size
    ? paperClips.where({
      size: PaperClip.Size[/* toString */ 1](size[0]),
    })
    : paperClips
  return query.select('*').then(function (param) {
    return handleResponse('No PaperClips found.', param)
  })
}

function handleGetById (paperClips, id) {
  var partial_arg = 'No PaperClip found with id: ' + id
  return KnexUtils.handleDbErrors(
    paperClips
      .where({
        id: id,
      })
      .select('*')
      .then(function (param) {
        return handleResponse(partial_arg, param)
      })
      .then(KnexUtils.pickFirst)
  )
}

function handleAdd (paperClips, paperClip) {
  return KnexUtils.handleDbErrors(
    Knex.insert(/* None */ 0, paperClip)(paperClips)
      .returning('*')
      .then(function (param) {
        return handleResponse('Unable to add PaperClip.', param)
      })
      .then(KnexUtils.pickFirst)
  )
}

function handleUpdate (paperClips, id, paperClip) {
  var partial_arg = 'Unable to update PaperClip with id: ' + id
  return KnexUtils.handleDbErrors(
    Knex.update(/* None */ 0, paperClip)(
      paperClips.where({
        id: id,
      })
    )
      .then(function (param) {
        return handleResponse(partial_arg, param)
      })
      .then(KnexUtils.pickFirst)
  )
}

function handleRemove (paperClips, id) {
  return Knex.del(/* None */ 0, /* () */ 0)(
    paperClips.where({
      id: id,
    })
  ).then(function (response) {
    if (response.length !== 0) {
      return Promise.resolve({
        success: /* true */ 1,
      })
    } else {
      return Promise.reject(
        new Error('Unable to remove PaperClip with id: ' + id)
      )
    }
  })
}

function make (postgres) {
  var paperClips = Curry._1(postgres[/* fromTable */ 0], 'paper_clips')
  return /* record */ [
    /* getAll */ function (param) {
      return handleGetAll(paperClips, param)
    },
    /* getById */ function (param) {
      return handleGetById(paperClips, param)
    },
    /* add */ function (param) {
      return handleAdd(paperClips, param)
    },
    /* update */ function (param, param$1) {
      return handleUpdate(paperClips, param, param$1)
    },
    /* remove */ function (param) {
      return handleRemove(paperClips, param)
    },
  ]
}

exports.handleResponse = handleResponse
exports.handleGetAll = handleGetAll
exports.handleGetById = handleGetById
exports.handleAdd = handleAdd
exports.handleUpdate = handleUpdate
exports.handleRemove = handleRemove
exports.make = make
/* KnexUtils Not a pure module */
