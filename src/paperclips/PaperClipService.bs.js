// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict'

var Knex = require('bs-knex/src/Knex.bs.js')
var Schema = require('../Schema.bs.js')
var KnexUtils = require('bs-knex/src/KnexUtils.bs.js')
var PromiseUtils = require('../utils/PromiseUtils.bs.js')

function getAll (paperClips, size) {
  var query = size
    ? paperClips.where({
      size: Schema.PaperClip[/* sizeToJs */ 0](size[0]),
    })
    : paperClips
  return query.select('*').then(function (param) {
    return PromiseUtils.rejectIfEmpty('No PaperClips found.', param)
  })
}

function getById (paperClips, id) {
  var partial_arg = 'No PaperClip found with id: ' + id
  return KnexUtils.handleDbErrors(
    paperClips
      .where({
        id: id,
      })
      .select('*')
      .then(function (param) {
        return PromiseUtils.rejectIfEmpty(partial_arg, param)
      })
      .then(PromiseUtils.pickFirst)
  )
}

function add (paperClips, paperClip) {
  return KnexUtils.handleDbErrors(
    Knex.insert(/* None */ 0, paperClip)(paperClips)
      .returning('*')
      .then(function (param) {
        return PromiseUtils.rejectIfEmpty('Unable to add PaperClip.', param)
      })
      .then(PromiseUtils.pickFirst)
  )
}

function update (paperClips, id, paperClip) {
  var partial_arg = 'Unable to update PaperClip with id: ' + id
  return KnexUtils.handleDbErrors(
    Knex.update(/* None */ 0, paperClip)(
      paperClips.where({
        id: id,
      })
    )
      .then(function (param) {
        return PromiseUtils.rejectIfEmpty(partial_arg, param)
      })
      .then(PromiseUtils.pickFirst)
  )
}

function remove (paperClips, id) {
  return Knex.del(/* None */ 0, /* () */ 0)(
    paperClips.where({
      id: id,
    })
  ).then(function (response) {
    if (response.length !== 0) {
      return Promise.resolve({
        success: /* true */ 1,
      })
    } else {
      return Promise.reject(
        new Error('Unable to remove PaperClip with id: ' + id)
      )
    }
  })
}

function make (dataProvider) {
  var paperClips = Knex.fromTable(
    'paper_clips',
    dataProvider[/* postgres */ 0][/* knex */ 0]
  )
  return /* record */ [
    /* getAll */ function (param) {
      return getAll(paperClips, param)
    },
    /* getById */ function (param) {
      return getById(paperClips, param)
    },
    /* add */ function (param) {
      return add(paperClips, param)
    },
    /* update */ function (param, param$1) {
      return update(paperClips, param, param$1)
    },
    /* remove */ function (param) {
      return remove(paperClips, param)
    },
  ]
}

exports.getAll = getAll
exports.getById = getById
exports.add = add
exports.update = update
exports.remove = remove
exports.make = make
/* KnexUtils Not a pure module */
